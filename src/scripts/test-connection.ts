// Test database connection

import { DatabaseManager, getDefaultDatabaseConfig } from '../config/database';

async function testConnection() {
  const config = getDefaultDatabaseConfig();
  const dbManager = DatabaseManager.getInstance(config);

  try {
    console.log('Testing database connection...');
    
    // ËøûÊé•Êï∞ÊçÆÂ∫ì
    await dbManager.connect();
    console.log('‚úì Database connection successful');

    // ÂÅ•Â∫∑Ê£ÄÊü•
    const healthy = await dbManager.healthCheck();
    console.log(`‚úì Health check: ${healthy ? 'PASS' : 'FAIL'}`);

    // Ëé∑ÂèñÁªüËÆ°‰ø°ÊÅØ
    const stats = await dbManager.getStats();
    console.log(`‚úì Database stats: ${stats.tables} tables, ${stats.totalRows} total rows`);

    // ÊâßË°åËøÅÁßª
    await dbManager.migrate();
    console.log('‚úì Database migration completed');

    // ÂÜçÊ¨°Ëé∑ÂèñÁªüËÆ°‰ø°ÊÅØ
    const newStats = await dbManager.getStats();
    console.log(`‚úì After migration: ${newStats.tables} tables, ${newStats.totalRows} total rows`);

  } catch (error) {
    console.error('‚úó Database test failed:', error);
    throw error;
  } finally {
    await dbManager.close();
    console.log('‚úì Database connection closed');
  }
}

// Â¶ÇÊûúÁõ¥Êé•ËøêË°åÊ≠§ËÑöÊú¨
if (require.main === module) {
  testConnection()
    .then(() => {
      console.log('\nüéâ All database tests passed!');
      process.exit(0);
    })
    .catch((error) => {
      console.error('\n‚ùå Database tests failed:', error);
      process.exit(1);
    });
}

export { testConnection };